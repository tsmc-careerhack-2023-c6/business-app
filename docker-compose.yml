version: '3'
services:
  database:
    container_name: database
    image: postgres:latest
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - db.env
    ports:
      - 15432:5432
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - database
    environment:
      ADMINER_DEFAULT_SERVER: database
  business-app:
    container_name: business-app
    image: wst24365888/tsmc-careerhack-2023-c6-business-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8100:8100
    depends_on:
      - database
    env_file:
      - prod.env
  inventory-service:
    container_name: inventory-service
    image: wst24365888/tsmc-careerhack-2023-c6-inventory-service:latest
    restart: always
    ports:
      - 8200:8200
  # redis:
  #   container_name: redis
  #   image: redis:latest
  #   restart: always
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - redis-data:/data
  #   command:
  #     - /bin/sh
  #     - -c
  #     # - Double dollars, so that the variable is not expanded by Docker Compose
  #     # - Surround by quotes, so that the shell does not split the password
  #     # - The ${variable:?message} syntax causes shell to exit with a non-zero
  #     #   code and print a message, when the variable is not set or empty
  #     - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
  #   env_file:
  #     - redis.env
  nats:
    container_name: nats
    image: nats:latest
    restart: always
    ports:
      - 4222:4222
      - 8222:8222
volumes:
  pgdata:
  redis-data:
